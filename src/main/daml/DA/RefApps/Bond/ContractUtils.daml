--
-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--

daml 1.2
module DA.RefApps.Bond.ContractUtils where

import DA.Optional
import DA.List.Total

import DA.Finance.Rule.Asset
import DA.Finance.Types

import DA.RefApps.Bond.Lock

type Contract a = (ContractId a, a)

filterContractIds: (a -> Bool) -> [Contract a] -> [ContractId a]
filterContractIds p contracts = [id | (id, value) <- contracts, p value]

headNote: Text -> [a] -> a
headNote message = (fromSomeNote message) . head

findAssetSettlement: [Contract AssetSettlement] -> Party -> Party -> ContractId AssetSettlement
findAssetSettlement assetSettlements provider owner =
  headNote "Can't find any AssetSettlement contract" $
    filterContractIds (\x -> accountBelongsTo provider owner x.account) assetSettlements

findAssetFungible: [Contract AssetFungible] -> Party -> Party -> ContractId AssetFungible
findAssetFungible assetFungibles provider owner =
  headNote "Can't find any AssetFungible contract" $
    filterContractIds (\x -> accountBelongsTo provider owner x.account) assetFungibles

findAuctionLockedCashes: [Contract AuctionLockedCash] -> Party -> Text -> [ContractId AuctionLockedCash]
findAuctionLockedCashes auctionLockedCashes auctionAgent auctionName =
  filterContractIds (auctionBelongsTo auctionAgent auctionName) auctionLockedCashes

accountBelongsTo: Party -> Party -> Account -> Bool
accountBelongsTo provider owner account =
     provider == account.provider
  && owner == account.owner

auctionBelongsTo: Party -> Text -> AuctionLockedCash -> Bool
auctionBelongsTo auctionAgent auctionName auction =
     auctionAgent == auction.auctionAgent
  && auctionName == auction.auctionName
