--
-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--

daml 1.2
module DA.RefApps.Bond.ContractUtils where

import DA.Optional
import DA.List.Total

import DA.Finance.Rule.Asset
import DA.Finance.Types

import DA.RefApps.Bond.Lock

type Contract a = (ContractId a, a)

class Template a => HasAccount a where
  accountOf: a -> Account

instance HasAccount AssetSettlement where
  accountOf t = t.account

instance HasAccount AssetFungible where
  accountOf t = t.account

filterContractIds: (a -> Bool) -> [Contract a] -> [ContractId a]
filterContractIds p contracts = [id | (id, value) <- contracts, p value]

headNote: Text -> [a] -> a
headNote message = (fromSomeNote message) . head

findAssetSettlement: [Contract AssetSettlement] -> Party -> Party -> ContractId AssetSettlement
findAssetSettlement assetSettlements provider owner =
  findAsset provider owner "Can't find any AssetSettlement contract" assetSettlements

findAssetFungible: [Contract AssetFungible] -> Party -> Party -> ContractId AssetFungible
findAssetFungible assetFungibles provider owner =
  findAsset provider owner "Can't find any AssetFungible contract" assetFungibles

findAsset: (HasAccount a) => Party -> Party -> Text -> [Contract a] -> ContractId a
findAsset provider owner message assets =
  headNote message $ filterContractIds (accountBelongsTo provider owner) assets

accountBelongsTo: (HasAccount a) => Party -> Party -> a -> Bool
accountBelongsTo provider owner a = do
  let account = accountOf a
  provider == account.provider && owner == account.owner

findAuctionLockedCashes: [Contract AuctionLockedCash] -> Party -> Text -> [ContractId AuctionLockedCash]
findAuctionLockedCashes auctionLockedCashes auctionAgent auctionName =
  filterContractIds (auctionBelongsTo auctionAgent auctionName) auctionLockedCashes

auctionBelongsTo: Party -> Text -> AuctionLockedCash -> Bool
auctionBelongsTo auctionAgent auctionName auction =
     auctionAgent == auction.auctionAgent
  && auctionName == auction.auctionName
