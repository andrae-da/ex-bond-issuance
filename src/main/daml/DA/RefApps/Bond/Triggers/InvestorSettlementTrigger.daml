--
-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--

daml 1.2

module DA.RefApps.Bond.Triggers.InvestorSettlementTrigger where

import Daml.Trigger
import DA.Next.Map qualified as Maps
import DA.Foldable
import DA.Optional

import DA.RefApps.Bond.Settlement
import DA.RefApps.Bond.Lock
import DA.Finance.Rule.Asset

investorSettlementTrigger: Trigger ()
investorSettlementTrigger = Trigger
  { initialize = const ()
  , updateState = \_ _ _ -> ()
  , rule = investorSettlement
  , registeredTemplates = RegisteredTemplates [
      registeredTemplate @InvestorSettlementBotTrigger,
      registeredTemplate @AuctionLockedCash,
      registeredTemplate @AssetSettlement,
      registeredTemplate @AssetFungible
    ]
  , heartbeat = None
  }

investorSettlement: Party -> ACS -> Time -> Maps.Map CommandId [Command] -> () -> TriggerA ()
investorSettlement party activeContracts _ _ () = do
  let
    investorSettlementBotTrigger = getContracts @InvestorSettlementBotTrigger activeContracts
    auctionLockedCashes = getContracts @AuctionLockedCash activeContracts
    assetSettlements = getContracts @AssetSettlement activeContracts
    assetFungibles = getContracts @AssetFungible activeContracts

  forA_
    investorSettlementBotTrigger
    (finializeInvestorSettlement auctionLockedCashes assetSettlements assetFungibles)

type Contract a = (ContractId a, a)

-- TODO: Error when auction locks are missing.
finializeInvestorSettlement:
  [Contract AuctionLockedCash] ->
  [Contract AssetSettlement] ->
  [Contract AssetFungible] ->
  Contract InvestorSettlementBotTrigger ->
  TriggerA ()
finializeInvestorSettlement auctionLockedCashes assetSettlements assetFungibles contract = do
  let
    (id, value) = contract
    assetSettlement = findAssetSettlement assetSettlements value.cashProvider value.investor
    assetFungible = findAssetFungible assetFungibles value.cashProvider value.investor
    auctionLockedCashIds = findAuctionLockedCashes auctionLockedCashes contract

  id `dedupExercise` InvestorSettlementBotTrigger_Finalize auctionLockedCashIds assetFungible assetSettlement

-- TODO: Remove code duplications.
findAssetSettlement: [Contract AssetSettlement] -> Party -> Party -> ContractId AssetSettlement
findAssetSettlement assetSettlements provider owner = do
  let
    result = find
      (\(_, contract) ->
           contract.account.provider == provider
        && contract.account.owner == owner)
      assetSettlements
  fromSomeNote "Can't find any AssetSettlement contract" $ fmap fst result

findAssetFungible: [Contract AssetFungible] -> Party -> Party -> ContractId AssetFungible
findAssetFungible assetFungibles provider owner = do
  let
    result = find
      (\(_, contract) ->
           contract.account.provider == provider
        && contract.account.owner == owner)
      assetFungibles
  fromSomeNote "Can't find any AssetFungible contract" $ fmap fst result

findAuctionLockedCashes: [Contract AuctionLockedCash] -> Contract InvestorSettlementBotTrigger -> [ContractId AuctionLockedCash]
findAuctionLockedCashes = (???)

(???) = error "Not implemented"
